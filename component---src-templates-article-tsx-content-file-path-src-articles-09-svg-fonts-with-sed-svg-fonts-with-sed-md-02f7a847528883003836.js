"use strict";(self.webpackChunkhomepage=self.webpackChunkhomepage||[]).push([[908],{4893:function(e,n,t){t.r(n),t.d(n,{Head:function(){return x},default:function(){return y}});var l=t(8453),a=t(6540);function s(e){const n=Object.assign({p:"p",pre:"pre",code:"code",h1:"h1",a:"a",span:"span",strong:"strong",ol:"ol",li:"li",h2:"h2"},(0,l.R)(),e.components);return a.createElement(a.Fragment,null,a.createElement(n.p,null,"So you want to embed an SVG on your website and add this to your HTML:"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-html"},'<object class="page" data="input_svg.svg" type="image/svg+xml"></object>\n')),"\n",a.createElement(n.p,null,"In my case this is an Affinity Designer SVG export."),"\n",a.createElement(n.p,null,"But now we realize that the fonts don't work.\nThat's because your pretty SVG doesn't tell the browser where to find these fonts.\nUsually you can fix this with CSS like this, making sure you actually host the ",a.createElement(n.code,null,".woff")," file at the specified location:"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-css"},"@font-face {\n    font-family: 'Candara';\n    src: url('/vendor/fonts/Candara-Regular.woff')format('woff');\n    font-weight: normal;\n    font-style: normal;\n}\n")),"\n",a.createElement(n.p,null,"Unfortunately this CSS can't just be included in your HTML document, it has to be part of the SVG itself.\nThis is how the original SVG looks like:"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-svg"},'<?xml version="1.0" encoding="UTF-8" standalone="no"?>\n<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">\n<svg [...]>\n    [...]\n</svg>\n')),"\n",a.createElement(n.p,null,"After the injection we need it to look like this:"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-svg"},'<?xml version="1.0" encoding="UTF-8" standalone="no"?>\n<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">\n<svg [...]>\n    <defs>\n        <style type="text/css"><![CDATA[\n            @font-face {\n                font-family: \'Candara\';\n                src: url(\'/vendor/fonts/Candara-Regular.woff\')format(\'woff\');\n                font-weight: normal;\n                font-style: normal;\n            }\n        ]]></style>\n    </defs>\n\n    [...]\n</svg>\n')),"\n",a.createElement(n.h1,{id:"all-hail-sed-a-stream-editor",style:{position:"relative"}},a.createElement(n.a,{href:"#all-hail-sed-a-stream-editor","aria-label":"all hail sed a stream editor permalink",className:"anchor before"},a.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"All Hail sed, a ",a.createElement(n.strong,null,"s"),"tream ",a.createElement(n.strong,null,"ed"),"itor!"),"\n",a.createElement(n.p,null,"So, how do we do this?"),"\n",a.createElement(n.p,null,"We have the font-loading CSS in the file ",a.createElement(n.code,null,"fonts.css"),".\nOur first challenge lies in surrounding this CSS with the required SVG stuff."),"\n",a.createElement(n.p,null,"Let's do this with sed and start with creating the file ",a.createElement(n.code,null,"fonts_css_template.txt"),":"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-xml"},'<defs>\n    <style type="text/css"><![CDATA[\nOHtFGivqhAswi\n    ]]></style>\n</defs>\n')),"\n",a.createElement(n.p,null,"As you can see the (randomly chosen) string ",a.createElement(n.code,null,"OHtFGivqhAswi")," needs to be replaced with the CSS."),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-bash"},"sed \"/OHtFGivqhAswi/e cat fonts.css\" fonts_css_template.txt | \\\n    sed 's/OHtFGivqhAswi//' \\\n    > final_text_to_include_in_svg.txt\n")),"\n",a.createElement(n.ol,null,"\n",a.createElement(n.li,null,"The first sed command reads ",a.createElement(n.code,null,"fonts.css")," and puts it right before ",a.createElement(n.code,null,"OHtFGivqhAswi"),";"),"\n",a.createElement(n.li,null,"the second deletes ",a.createElement(n.code,null,"OHtFGivqhAswi"),".\nThis only works because ",a.createElement(n.code,null,"OHtFGivqhAswi")," is on its own line."),"\n",a.createElement(n.li,null,"We pipe the output into ",a.createElement(n.code,null,"final_text_to_include_in_svg.txt"),".\nThis is what needs to be injected into the SVG."),"\n"),"\n",a.createElement(n.h2,{id:"commence-the-injection",style:{position:"relative"}},a.createElement(n.a,{href:"#commence-the-injection","aria-label":"commence the injection permalink",className:"anchor before"},a.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Commence the Injection"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-bash"},"sed -E 's/(<svg [^>]+>)/\\1\\ncI0WWZKD2UKEj\\n/' input_svg.svg | \\\n    sed \"/cI0WWZKD2UKEj/e cat final_text_to_include_in_svg.txt\" | \\\n    sed 's/cI0WWZKD2UKEj//' \\\n    > output_svg.svg\n")),"\n",a.createElement(n.ol,null,"\n",a.createElement(n.li,null,"Our first command finds the opening ",a.createElement(n.code,null,"svg")," tag and appends the random string ",a.createElement(n.code,null,"cI0WWZKD2UKEj"),", making sure it is on its own line."),"\n",a.createElement(n.li,null,"This is followed by exactly what we've done before: prepend what needs to be injected,"),"\n",a.createElement(n.li,null,"replace ",a.createElement(n.code,null,"cI0WWZKD2UKEj")," and"),"\n",a.createElement(n.li,null,"pipe the output where it is needed."),"\n"),"\n",a.createElement(n.p,null,"You don't need that ginormous web framework for simple thingsâ€”some CSS and sed does the trick just fine.\nPerhaps, first take a look at what the GNU toolbox offers when solving the next challenge you come across."),"\n",a.createElement(n.h2,{id:"the-final-script",style:{position:"relative"}},a.createElement(n.a,{href:"#the-final-script","aria-label":"the final script permalink",className:"anchor before"},a.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),a.createElement(n.a,{href:"https://github.com/SelinaStrobel/homepage/blob/main/fonts_loader/load_fonts_in_css.sh"},"The Final Script")),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-bash"},'#!/bin/bash\nset -euo pipefail\nDIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd)"\n\nFONTS_CSS_TEMPLATE="$DIR/fonts_css_template.txt"\nFINAL_TEXT_TO_INCLUDE_IN_SVG="$DIR/final_text_to_include_in_svg.txt"\nFONTS_CSS_FILE="$DIR/fonts.css"\n\necho "converting $1 to $2"\n\nsed "/OHtFGivqhAswi/e cat $FONTS_CSS_FILE" "$FONTS_CSS_TEMPLATE" | \\\n    sed \'s/OHtFGivqhAswi//\' \\\n    > "$FINAL_TEXT_TO_INCLUDE_IN_SVG"\n\nsed -E \'s/(<svg [^>]+>)/\\1\\ncI0WWZKD2UKEj\\n/\' "$1" | \\\n    sed "/cI0WWZKD2UKEj/e cat $FINAL_TEXT_TO_INCLUDE_IN_SVG" | \\\n    sed \'s/cI0WWZKD2UKEj//\' \\\n    > "$2"\n')),"\n",a.createElement(n.p,null,"Save this as ",a.createElement(n.code,null,"load_fonts_in_css.sh"),", run:"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-bash"},"chmod +x ./load_fonts_in_css.sh\n./load_fonts_in_css.sh input_svg.svg output_svg.svg\n")))}var o=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,l.R)(),e.components);return n?a.createElement(n,e,a.createElement(s,e)):s(e)},r=t(5365),i=t(2224),c=t(9121),d=t(4241),m=t(4810),h=t(1244),u=t(5071),f=t(9105),v=t(6897),p=t(7629),g=t(8029),E=t(1042),_=t(5526),w=t(5969);const S={AutoPlayVideo:u.A,HalfImage:f.A,Spacer:v.A,Quote:p.A,Iframe:g.A,CompareView:h.A,pre:e=>{let{children:n}=e;return a.createElement("div",{className:"code-container"}," ",a.createElement("pre",null,n))},code:e=>{let{children:n,className:t}=e;return t?a.createElement(_.A,{className:t},n):a.createElement("code",{className:"language-text"},n)},a:w.A},b=e=>{var n,t,s,o,h,u,f,v,p,g,E,_,w,b;let{data:y,children:x}=e;const T=null===(n=y.mdx)||void 0===n||null===(t=n.frontmatter)||void 0===t?void 0:t.version,C=null===(s=y.mdx)||void 0===s||null===(o=s.frontmatter)||void 0===o?void 0:o.title,N=/^0\./.test(T)?`Draft v${T}`:void 0,A=null===(h=y.mdx)||void 0===h||null===(u=h.frontmatter)||void 0===u?void 0:u.date,I=null!=(null===(f=y.mdx)||void 0===f||null===(v=f.frontmatter)||void 0===v?void 0:v.title_banner),D={"--banner-image-horizontal-position":null===(p=y.mdx)||void 0===p||null===(g=p.frontmatter)||void 0===g?void 0:g.title_banner_horizontal_position,"--banner-image-vertical-position":null===(E=y.mdx)||void 0===E||null===(_=E.frontmatter)||void 0===_?void 0:_.title_banner_vertical_position};return a.createElement(r.A,{heading:C,sub_heading:N,banner_image:I?null===(w=y.mdx)||void 0===w||null===(b=w.frontmatter)||void 0===b?void 0:b.title_banner:void 0,banner_image_style:D,small_banner:!0,banner_content:a.createElement("div",{className:`${i.yu} ${I?i.Lx:void 0}`},a.createElement("span",{className:i.cy},"Written by Christopher Besch, published on "),A)},a.createElement("div",{className:c.xo},a.createElement(l.x,{components:S},x)),a.createElement(m.N_,{className:`${d.om} ${d.nf}`,to:"/articles"},"More Articles"))};function y(e){return a.createElement(b,e,a.createElement(o,e))}const x=e=>{var n,t,l,s,o,r;let{data:i}=e;const c=null===(n=i.mdx)||void 0===n||null===(t=n.frontmatter)||void 0===t?void 0:t.title,d=null===(l=i.mdx)||void 0===l||null===(s=l.frontmatter)||void 0===s?void 0:s.description,m=null===(o=i.mdx)||void 0===o||null===(r=o.frontmatter)||void 0===r?void 0:r.banner,h=m&&"undefined"!=m?m:void 0;return a.createElement(E.A,{heading:c,description:d,banner:h})}}}]);
//# sourceMappingURL=component---src-templates-article-tsx-content-file-path-src-articles-09-svg-fonts-with-sed-svg-fonts-with-sed-md-02f7a847528883003836.js.map