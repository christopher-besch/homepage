{"version":3,"file":"component---src-pages-index-tsx-2706e8bfad7440d2cf29.js","mappings":"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","sources":["webpack://homepage/./src/components/article_list.tsx","webpack://homepage/./src/styles/article_list.module.scss","webpack://homepage/./src/components/hover_icon.tsx","webpack://homepage/./src/components/project_list.tsx","webpack://homepage/./src/styles/project_list.module.scss","webpack://homepage/./src/styles/home.module.scss","webpack://homepage/./src/components/sub_heading.tsx","webpack://homepage/./src/pages/index.tsx","webpack://homepage/./src/utils/consts.tsx","webpack://homepage/./src/utils/languages.tsx"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { getImage, GatsbyImage, IGatsbyImageData, ImageDataLike } from \"gatsby-plugin-image\";\n\nimport * as styles from \"src/styles/article_list.module.scss\";\n\nexport type Article = {\n    id: number;\n    date: string;\n    description: string;\n    slug: string;\n    title: string;\n    thumb: IGatsbyImageData;\n}\n\nexport function gql_to_article(article: any): Article {\n    return {\n        id: article.node.id,\n        date: article.node.frontmatter?.date,\n        description: article.node.frontmatter?.description,\n        slug: article.node.frontmatter?.slug,\n        title: article.node.frontmatter?.title,\n        thumb: getImage(article.node.frontmatter?.thumb as ImageDataLike)!,\n    };\n}\n\ninterface ArticleListProps {\n    articles: Article[];\n    className?: string;\n}\nconst ArticleList: React.FC<ArticleListProps> = (props) => {\n    return (\n        <div className={props.className}>\n            {props.articles.map(article =>\n                <Link to={`/articles/${article.slug}`} key={article.id} className={styles.article}>\n                    <GatsbyImage className={styles.image} image={article.thumb} alt=\"thumbnail\" />\n                    <div className={styles.body}>\n                        <h2 className={styles.heading}>{article.title}</h2>\n                        <hr />\n                        <div>\n                            {article.description.split(\"\\n\").map((paragraph, idx) =>\n                                <p key={idx}>{paragraph}</p>\n                            )}\n                        </div>\n                    </div>\n                </Link>\n            )}\n        </div>\n    );\n};\nexport default ArticleList;\n\n","// extracted by mini-css-extract-plugin\nexport var article = \"article_list-module--article--xkASR\";\nexport var body = \"article_list-module--body--PiDw-\";\nexport var heading = \"article_list-module--heading--pChY+\";\nexport var image = \"article_list-module--image--Bl6T5\";","import React from \"react\";\n\nimport * as styles from \"src/styles/hover_icon.module.scss\";\nimport get_mask from \"src/utils/svg_mask\";\n\ninterface HoverIconProps {\n    icon: string;\n    alt?: string;\n    icon_mono?: string;\n    className?: string;\n    // used to add hover effect to out-of-scope elements\n    icon_class?: string;\n    icon_mono_class?: string;\n}\nconst HoverIcon: React.FC<HoverIconProps> = (props) => {\n    const icon = props.icon;\n    const alt = props.alt ? props.alt : \"icon\";\n    const icon_mono = props.icon_mono ? props.icon_mono : icon;\n    return (\n        <div className={`${styles.icon_wrapper} ${props.className}`}>\n            <img\n                className={`${styles.icon} ${props.icon_class}`}\n                src={icon}\n                alt={alt}\n            />\n            <div\n                className={`${styles.icon_mono} ${props.icon_mono_class}`}\n                style={get_mask(icon_mono)}\n            ></div>\n        </div>\n    );\n};\nexport default HoverIcon;\n","import { getImage, GatsbyImage, IGatsbyImageData, ImageDataLike } from \"gatsby-plugin-image\";\nimport React from \"react\";\n\nimport * as styles from \"src/styles/project_list.module.scss\";\nimport { Language, languages } from \"src/utils/languages\";\nimport HoverIcon from \"./hover_icon\";\n\nexport type Project = {\n    id: number;\n    date: string;\n    languages: Language[];\n    priority: number;\n    dependencies: string[];\n    description: string;\n    slug: string;\n    link: string;\n    title: string;\n    thumb: IGatsbyImageData;\n}\n\nexport function gql_to_project(project: any): Project {\n    return {\n        id: project.node.id,\n        date: project.node.frontmatter?.date,\n        languages: project.node.frontmatter?.languages.map((language: string) => languages.get(language)),\n        priority: parseInt(project.node.frontmatter?.priority),\n        dependencies: project.node.frontmatter?.dependencies,\n        description: project.node.frontmatter?.description,\n        slug: project.node.frontmatter?.slug,\n        link: project.node.frontmatter?.link,\n        title: project.node.frontmatter?.title,\n        thumb: getImage(project.node.frontmatter?.thumb as ImageDataLike)!,\n    };\n}\n\ninterface ProjectListProps {\n    projects: Project[];\n    count: number;\n    className?: string;\n}\nconst ProjectList: React.FC<ProjectListProps> = (props) => {\n    const count = props.count;\n    const full_width = `${100 / count}%`;\n    const half_width = `${100 / Math.ceil(count / 2)}%`;\n    const quarter_width = `${100 / Math.ceil(count / 4)}%`;\n    let width_properties = {\n        \"--full-width\": full_width,\n        \"--half-width\": half_width,\n        \"--quarter-width\": quarter_width,\n    } as React.CSSProperties;\n    return (\n        <div className={`${styles.projects} ${props.className}`}>\n            {props.projects.map(project =>\n                <a href={project.link} target=\"_blank\" key={project.id} className={styles.project} style={width_properties}>\n                    <div className={styles.content}>\n                        <div className={styles.image_wrapper}>\n                            <GatsbyImage className={styles.image} image={project.thumb} alt=\"thumbnail\" />\n                            <div className={styles.overlay}>\n                                <h2 className={styles.heading}>{project.title}</h2>\n                                <div className={styles.languages}>\n                                    {project.languages.map(language =>\n                                        <HoverIcon\n                                            className={styles.language_icon}\n                                            key={`${project.id}${language.id}`}\n                                            icon={language.icon}\n                                            icon_mono={language.icon_mono}\n                                            alt={language.id}\n                                            icon_class={styles.icon}\n                                            icon_mono_class={styles.icon_mono}\n                                        />\n                                    )}\n                                </div>\n                            </div>\n                        </div>\n                        <hr />\n                        <div className={styles.text}>\n                            <p>{project.description}</p>\n                        </div>\n                    </div>\n                </a>\n            )}\n        </div>);\n};\nexport default ProjectList;\n","// extracted by mini-css-extract-plugin\nexport var content = \"project_list-module--content--X4RCX\";\nexport var heading = \"project_list-module--heading--WtmWI\";\nexport var icon = \"project_list-module--icon--af6I8\";\nexport var icon_mono = \"project_list-module--icon_mono--f98N0\";\nexport var image = \"project_list-module--image--sF6qu\";\nexport var image_wrapper = \"project_list-module--image_wrapper--dFZqW\";\nexport var language_icon = \"project_list-module--language_icon--XgM-W\";\nexport var languages = \"project_list-module--languages--C854W\";\nexport var overlay = \"project_list-module--overlay--XYwST\";\nexport var project = \"project_list-module--project--s09uQ\";\nexport var projects = \"project_list-module--projects--r5Yl-\";\nexport var text = \"project_list-module--text--JYNq1\";","// extracted by mini-css-extract-plugin\nexport var articles = \"home-module--articles--ysNI6\";\nexport var container = \"home-module--container--aj9vI\";\nexport var first_con = \"home-module--first_con--LiZMI\";\nexport var icon = \"home-module--icon---JXD8\";\nexport var language = \"home-module--language---W-Zl\";\nexport var languages = \"home-module--languages--TqOl1\";\nexport var projects = \"home-module--projects---l-zE\";\nexport var second_con = \"home-module--second_con---RAfQ\";","import React from \"react\";\n\nimport * as styles from \"src/styles/sub_heading.module.scss\";\n\ninterface HeadingProps {\n    heading: string;\n    className?: string;\n}\nconst SubHeading: React.FC<HeadingProps> = (props) =>\n    <div className={`${styles.sub_heading} ${props.className}`}>\n        <h1>\n            {props.heading}\n        </h1>\n        <hr />\n    </div>\n\nexport default SubHeading;\n","import React from \"react\";\nimport { graphql, Link } from \"gatsby\";\nimport { HomePage } from \"./__generated__/home-page\";\n\nimport Layout from \"src/components/layout\";\nimport ProjectList, { gql_to_project } from \"src/components/project_list\";\nimport ArticleList, { gql_to_article } from \"src/components/article_list\";\nimport * as styles from \"src/styles/home.module.scss\";\nimport * as util_styles from \"src/styles/utils.module.scss\";\nimport Heading from \"src/components/heading\";\nimport SubHeading from \"src/components/sub_heading\";\nimport HoverIcon from \"src/components/hover_icon\";\nimport { max_priority_highlight } from \"src/utils/consts\";\n\ninterface HomeProps {\n    data: HomePage\n}\nconst Home: React.FC<HomeProps> = (props) => {\n    const all_projects = props.data.allMdx.edges.filter(element => element.node.frontmatter?.type == \"project\").map(gql_to_project);\n    const projects = all_projects.filter(project => project.priority <= max_priority_highlight);\n\n    const all_articles = props.data.allMdx.edges.filter(element => element.node.frontmatter?.type == \"article\").map(gql_to_article);\n    const articles = all_articles.slice(0, 2);\n\n    return (\n        <Layout>\n            <Heading heading=\"Hello Smart People!\" sub_heading=\"I'm Chris.\" />\n            <div className={styles.container}>\n                <div className={styles.first_con}>\n                    <ProjectList className={styles.projects} projects={projects} count={2} />\n                    <Link className={`${util_styles.block} ${util_styles.link}`} to=\"/projects\">More Projects</Link>\n\n                    <SubHeading heading=\"Recent Articles\" />\n                    <ArticleList className={styles.articles} articles={articles} />\n                    <Link className={`${util_styles.block} ${util_styles.link}`} to=\"/articles\">More Articles</Link>\n                </div>\n                <div className={styles.second_con}>\n                    <div className={styles.languages}>\n                        <div className={styles.language}><h2>Main Languages</h2></div>\n                        <Link to=\"/projects/cpp\" className={styles.language}>\n                            <HoverIcon className={styles.icon} icon=\"/icons/c-plusplus.svg\" icon_mono=\"/icons/c-plusplus_mono.svg\" alt=\"C++\" />\n                        </Link>\n                        <Link to=\"/projects/typescript\" className={styles.language}>\n                            <HoverIcon className={styles.icon} icon=\"/icons/typescript-icon.svg\" icon_mono=\"/icons/typescript-icon_mono.svg\" alt=\"TypeScript\" />\n                        </Link>\n                        <Link to=\"/projects/python\" className={styles.language}>\n                            <HoverIcon className={styles.icon} icon=\"/icons/python.svg\" alt=\"Python\" />\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        </Layout>\n    );\n};\nexport default Home;\n\nexport const query = graphql`\nquery HomePage {\n  allMdx(\n    sort: {fields: [frontmatter___priority,frontmatter___date], order: [ASC, DESC]},\n    filter: {frontmatter: {listed: {eq: true}}}\n  ) {\n    edges {\n      node {\n        id\n        frontmatter {\n          type\n          languages\n          priority\n          dependencies\n          slug\n          link\n          description\n          title\n          thumb {\n            childImageSharp {\n              gatsbyImageData(placeholder: BLURRED)\n            }\n          }\n          date(formatString: \"MMMM YYYY\")\n        }\n      }\n    }\n  }\n}\n`;\n","export const max_priority_highlight = 0;\n// highest priority shown in project list\nexport const max_priority_list_default = 6;\n// highest priority shown in language specific project list\nexport const max_priority_language_default = 30;\n// highest priority shown in project list when \"show all\" has been selected\n// highest priority shown in language specific project list when \"show all\" has been selected\nexport const max_priority_list_all = 40;\nexport const max_priority_language_all = 50;\n\n// highlight (very impressive):\n//  0 - flagship project\n//  1 - highly polished / very interesting\n\n// projects (impressive):\n//  2 - polished\n//  3 - polished, bad docs\n//  4 - interesting experiment\n//  6 - polished, unmaintained\n\n// language specific projects (not so impressive):\n//  7 - polished, little use\n//  8 - polished, abandoned\n//  9 - unpolished\n// 21 - early stuff\n\n// all projects:\n// 31 - break fourth wall\n// 32 - show off, no use\n// 33 - show off, no use, less interesting\n// 34 - exotic\n// 35 - \"good\" java\n\n// all language specific languages:\n// 41 - unpolished, exotic\n\n// break url:\n// 51 - broken garbage\n\nexport const present_url = \"http://127.0.0.1:8080\";\n\n","export type Language = {\n    id: string;\n    name: string;\n    icon: string;\n    icon_mono: string;\n};\n\nexport const languages = new Map<string, Language>([\n    [\"python\", {\n        id: \"python\",\n        name: \"Python\",\n        icon: \"/icons/python.svg\",\n        icon_mono: \"/icons/python.svg\"\n    }],\n    [\"cpp\", {\n        id: \"cpp\",\n        name: \"C++\",\n        icon: \"/icons/c-plusplus.svg\",\n        icon_mono: \"/icons/c-plusplus_mono.svg\"\n    }],\n    [\"typescript\", {\n        id: \"typescript\",\n        name: \"TypeScript\",\n        icon: \"/icons/typescript-icon.svg\",\n        icon_mono: \"/icons/typescript-icon_mono.svg\"\n    }],\n    [\"java\", {\n        id: \"java\",\n        name: \"Java\",\n        icon: \"/icons/java.svg\",\n        icon_mono: \"/icons/java.svg\"\n    }],\n]);\n"],"names":["gql_to_article","article","id","node","date","frontmatter","_article$node$frontma","description","_article$node$frontma2","slug","_article$node$frontma3","title","_article$node$frontma4","thumb","getImage","_article$node$frontma5","props","React","className","articles","map","Link","to","key","GatsbyImage","image","alt","split","paragraph","idx","icon","icon_mono","styles","icon_class","src","icon_mono_class","style","get_mask","gql_to_project","project","_project$node$frontma","languages","_project$node$frontma2","language","priority","parseInt","_project$node$frontma3","dependencies","_project$node$frontma4","_project$node$frontma5","_project$node$frontma6","link","_project$node$frontma7","_project$node$frontma8","_project$node$frontma9","count","width_properties","Math","ceil","projects","href","target","HoverIcon","heading","data","allMdx","edges","filter","element","type","max_priority_highlight","slice","Layout","Heading","sub_heading","ProjectList","util_styles","SubHeading","ArticleList","max_priority_list_default","max_priority_language_default","max_priority_list_all","max_priority_language_all","Map","name"],"sourceRoot":""}