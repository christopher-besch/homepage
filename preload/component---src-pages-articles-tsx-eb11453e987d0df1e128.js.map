{"version":3,"file":"component---src-pages-articles-tsx-eb11453e987d0df1e128.js","mappings":"kMAeO,SAASA,EAAeC,GAAwB,IAAD,UAClD,MAAO,CACHC,GAAID,EAAQE,KAAKD,GACjBE,KAAI,UAAEH,EAAQE,KAAKE,mBAAf,aAAEC,EAA0BF,KAChCG,YAAW,UAAEN,EAAQE,KAAKE,mBAAf,aAAEG,EAA0BD,YACvCE,KAAI,UAAER,EAAQE,KAAKE,mBAAf,aAAEK,EAA0BD,KAChCE,MAAK,UAAEV,EAAQE,KAAKE,mBAAf,aAAEO,EAA0BD,MACjCE,OAAOC,EAAAA,EAAAA,GAAQ,UAACb,EAAQE,KAAKE,mBAAd,aAACU,EAA0BF,QAQlD,IAoBA,EApBgD,SAACG,GAC7C,OACIC,EAAAA,cAAAA,MAAAA,CAAKC,UAAWF,EAAME,WACjBF,EAAMG,SAASC,KAAI,SAAAnB,GAAO,OACvBgB,EAAAA,cAACI,EAAAA,GAAD,CAAMC,GAAE,aAAerB,EAAQQ,KAAQc,IAAKtB,EAAQC,GAAIgB,UCjCnD,uCDkCDD,EAAAA,cAACO,EAAAA,EAAD,CAAaN,UC/Bd,oCD+BuCO,MAAOxB,EAAQY,MAAOa,IAAI,cAChET,EAAAA,cAAAA,MAAAA,CAAKC,UClCP,oCDmCMD,EAAAA,cAAAA,KAAAA,CAAIC,UClCP,uCDkCmCjB,EAAQU,OACxCM,EAAAA,cAAAA,KAAAA,MACAA,EAAAA,cAAAA,MAAAA,KACKhB,EAAQM,YAAYoB,MAAM,MAAMP,KAAI,SAACQ,EAAWC,GAAZ,OACjCZ,EAAAA,cAAAA,IAAAA,CAAGM,IAAKM,GAAMD,e,8DExB9C,UAR0C,SAACZ,GACvC,IAAMG,EAAWH,EAAMc,KAAKC,OAAOC,MAAMZ,IAAIpB,EAAAA,GAC7C,OACIiB,EAAAA,cAACgB,EAAAA,EAAD,CAAQC,QAAQ,YACZjB,EAAAA,cAACkB,EAAAA,EAAD,CAAahB,SAAUA","sources":["webpack://homepage/./src/components/article_list.tsx","webpack://homepage/./src/styles/article_list.module.scss","webpack://homepage/./src/pages/articles.tsx"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { getImage, GatsbyImage, IGatsbyImageData, ImageDataLike } from \"gatsby-plugin-image\";\n\nimport * as styles from \"src/styles/article_list.module.scss\";\n\nexport type Article = {\n    id: number;\n    date: string;\n    description: string;\n    slug: string;\n    title: string;\n    thumb: IGatsbyImageData;\n}\n\nexport function gql_to_article(article: any): Article {\n    return {\n        id: article.node.id,\n        date: article.node.frontmatter?.date,\n        description: article.node.frontmatter?.description,\n        slug: article.node.frontmatter?.slug,\n        title: article.node.frontmatter?.title,\n        thumb: getImage(article.node.frontmatter?.thumb as ImageDataLike)!,\n    };\n}\n\ninterface ArticleListProps {\n    articles: Article[];\n    className?: string;\n}\nconst ArticleList: React.FC<ArticleListProps> = (props) => {\n    return (\n        <div className={props.className}>\n            {props.articles.map(article =>\n                <Link to={`/articles/${article.slug}`} key={article.id} className={styles.article}>\n                    <GatsbyImage className={styles.image} image={article.thumb} alt=\"thumbnail\" />\n                    <div className={styles.body}>\n                        <h2 className={styles.heading}>{article.title}</h2>\n                        <hr />\n                        <div>\n                            {article.description.split(\"\\n\").map((paragraph, idx) =>\n                                <p key={idx}>{paragraph}</p>\n                            )}\n                        </div>\n                    </div>\n                </Link>\n            )}\n        </div>\n    );\n};\nexport default ArticleList;\n\n","// extracted by mini-css-extract-plugin\nexport var article = \"article_list-module--article--xkASR\";\nexport var body = \"article_list-module--body--PiDw-\";\nexport var heading = \"article_list-module--heading--pChY+\";\nexport var image = \"article_list-module--image--Bl6T5\";","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"src/components/layout\";\nimport ArticleList, { gql_to_article } from \"src/components/article_list\";\nimport { ArticlesPage } from \"./__generated__/articles-page\";\n\ninterface ArticlesProps {\n    data: ArticlesPage;\n}\nconst Articles: React.FC<ArticlesProps> = (props) => {\n    const articles = props.data.allMdx.edges.map(gql_to_article);\n    return (\n        <Layout heading=\"Articles\">\n            <ArticleList articles={articles} />\n        </Layout >\n    );\n};\nexport default Articles;\n\nexport const query = graphql`\nquery ArticlesPage {\n  allMdx(\n    sort: {fields: frontmatter___date, order: DESC}\n    filter: {frontmatter: {type: {eq: \"article\"}, listed: {eq: true}}}\n  ) {\n    edges {\n      node {\n        id\n        frontmatter {\n          slug\n          description\n          title\n          thumb {\n            childImageSharp {\n              gatsbyImageData(placeholder: BLURRED)\n            }\n          }\n          date(formatString: \"MMMM YYYY\")\n        }\n      }\n    }\n  }\n}\n`;\n"],"names":["gql_to_article","article","id","node","date","frontmatter","_article$node$frontma","description","_article$node$frontma2","slug","_article$node$frontma3","title","_article$node$frontma4","thumb","getImage","_article$node$frontma5","props","React","className","articles","map","Link","to","key","GatsbyImage","image","alt","split","paragraph","idx","data","allMdx","edges","Layout","heading","ArticleList"],"sourceRoot":""}