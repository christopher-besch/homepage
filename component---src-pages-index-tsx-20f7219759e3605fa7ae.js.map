{"version":3,"file":"component---src-pages-index-tsx-20f7219759e3605fa7ae.js","mappings":"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","sources":["webpack://homepage/./src/styles/photography.module.scss","webpack://homepage/./src/styles/utils.module.scss","webpack://homepage/./src/utils/consts.tsx","webpack://homepage/./src/styles/home.module.scss","webpack://homepage/./src/components/sub_heading.tsx","webpack://homepage/./src/pages/index.tsx","webpack://homepage/./src/utils/languages.tsx","webpack://homepage/./src/components/hover_icon.tsx","webpack://homepage/./src/components/project_list.tsx","webpack://homepage/./src/styles/project_list.module.scss","webpack://homepage/./src/styles/tile_list.module.scss","webpack://homepage/./src/components/tile_list.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var photo = \"photography-module--photo--faba5\";\nexport var photo_wrapper = \"photography-module--photo_wrapper--4d7ef\";\nexport var photos = \"photography-module--photos--ab385\";\nexport var slim_photo = \"photography-module--slim_photo--1b603\";","// extracted by mini-css-extract-plugin\nexport var block = \"utils-module--block--dae27\";\nexport var link = \"utils-module--link--f5973\";\nexport var main_block = \"utils-module--main_block--4b45a\";\nexport var spacer = \"utils-module--spacer--54e98\";","// highgest priority shown on index\nexport const max_priority_highlight = 140;\n// highest priority shown in project list\nexport const max_priority_list_default = 200;\n// highest priority shown in language specific project list\nexport const max_priority_language_default = 3000;\n// highest priority shown in project list when \"show all\" has been selected\n// highest priority shown in language specific project list when \"show all\" has been selected\nexport const max_priority_list_all = 4000;\nexport const max_priority_language_all = 5000;\n\n// highlight (very impressive):\n//  0 - flagship project\n//  1 - highly polished / very interesting\n\n// projects (impressive):\n//  2 - polished\n//  3 - polished, bad docs\n//  4 - interesting experiment\n//  6 - polished, unmaintained\n\n// language specific projects (not so impressive):\n//  7 - polished, little use\n//  8 - polished, abandoned\n//  9 - unpolished\n// 21 - early stuff\n\n// all projects:\n// 31 - break fourth wall\n// 32 - show off, no use\n// 33 - show off, no use, less interesting\n// 34 - exotic\n// 35 - \"good\" java\n\n// all language specific languages:\n// 41 - unpolished, exotic\n\n// break url:\n// 51 - broken garbage\n\nexport const present_url = \"http://127.0.0.1:8080\";\n\n","// extracted by mini-css-extract-plugin\nexport var banner_content = \"home-module--banner_content--0744e\";\nexport var language = \"home-module--language--fd6fd\";\nexport var languages = \"home-module--languages--4ea3a\";","import React from \"react\";\n\nimport * as styles from \"src/styles/sub_heading.module.scss\";\n\ninterface HeadingProps {\n    heading: string;\n    className?: string;\n}\nconst SubHeading = (props: HeadingProps) =>\n    <div className={`${styles.sub_heading} ${props.className}`}>\n        <h1>\n            {props.heading}\n        </h1>\n        <hr />\n    </div>\n\nexport default SubHeading;\n\n","import React from \"react\";\nimport { graphql, Link, PageProps } from \"gatsby\";\nimport { getImage, GatsbyImage, ImageDataLike } from \"gatsby-plugin-image\";\n\nimport Layout from \"src/components/layout\";\nimport SEO from \"src/components/seo\";\nimport ProjectList, { gql_to_project } from \"src/components/project_list\";\nimport TileList, { gql_article_to_tile } from \"src/components/tile_list\";\nimport * as styles from \"src/styles/home.module.scss\";\nimport * as util_styles from \"src/styles/utils.module.scss\";\nimport * as photography_styles from \"src/styles/photography.module.scss\";\nimport SubHeading from \"src/components/sub_heading\";\nimport HoverIcon from \"src/components/hover_icon\";\nimport { max_priority_highlight } from \"src/utils/consts\";\n\nconst Home = ({ data }: PageProps<Queries.HomeQuery>) => {\n    const all_projects = data.projects.edges.map(gql_to_project);\n    const projects = all_projects.filter(project => project.priority <= max_priority_highlight);\n\n    const all_articles = data.articles.edges.map(gql_article_to_tile);\n    const articles = all_articles.slice(0, 3);\n\n    const banner_image_style = {\n        \"--banner-image-horizontal-position\": \"65%\",\n        \"--banner-image-vertical-position\": \"30%\",\n    } as React.CSSProperties;\n    return (\n        <Layout banner_image={data.banner_photo as ImageDataLike} banner_image_style={banner_image_style} banner_content={\n            <div className={styles.banner_content}>\n                <h1>Welcome to Chris'&nbsp;Place!</h1>\n                <p>What are you here for?</p>\n\n                <div className={styles.languages}>\n                    <Link to=\"/projects/cpp\" className={styles.language}>\n                        <HoverIcon icon=\"/icons/c-plusplus.svg\" icon_mono=\"/icons/c-plusplus_mono.svg\" alt=\"C++\" />\n                    </Link>\n                    <Link to=\"/projects/rust\" className={styles.language}>\n                        <HoverIcon icon=\"/icons/rust.svg\" alt=\"Rust\" />\n                    </Link>\n                    <Link to=\"/projects/go\" className={styles.language}>\n                        <HoverIcon icon=\"/icons/go.svg\" alt=\"Go\" />\n                    </Link>\n                    <Link to=\"/projects/typescript\" className={styles.language}>\n                        <HoverIcon icon=\"/icons/typescript-icon.svg\" icon_mono=\"/icons/typescript-icon_mono.svg\" alt=\"TypeScript\" />\n                    </Link>\n                    <Link to=\"/projects/python\" className={styles.language}>\n                        <HoverIcon icon=\"/icons/python.svg\" alt=\"Python\" />\n                    </Link>\n                </div>\n            </div>\n        }>\n\n            <SubHeading heading=\"Recent Articles\" />\n            <TileList tiles={articles} />\n            <Link className={`${util_styles.block} ${util_styles.link}`} to=\"/articles\">More Articles</Link>\n\n            <SubHeading heading=\"Some Projects\" />\n            <ProjectList projects={projects} count={2} />\n            <Link className={`${util_styles.block} ${util_styles.link}`} to=\"/projects\">More Projects</Link>\n\n            <SubHeading heading=\"Photography\" />\n\n            <Link to=\"/photography\"><GatsbyImage className={photography_styles.slim_photo} image={getImage(data.photo as ImageDataLike)!} alt=\"alpha_mike\" /></Link>\n            <Link className={`${util_styles.block} ${util_styles.link}`} to=\"/photography\">More Photos</Link>\n        </Layout>\n    );\n};\nexport default Home;\n\nexport const query = graphql`\nquery Home {\n  articles: allMdx(\n    sort: {frontmatter: {date: DESC}}\n    filter: {frontmatter: {type: {eq: \"article\"}, listed: {eq: true}}}\n  ) {\n    edges {\n      node {\n        id\n        frontmatter {\n          slug\n          description\n          title\n          thumb {\n            childImageSharp {\n              gatsbyImageData(placeholder: BLURRED)\n            }\n          }\n          date(formatString: \"MMMM YYYY\")\n        }\n      }\n    }\n  }\n  projects: allMdx(\n    sort: {frontmatter: {priority: ASC}}\n    filter: {frontmatter: {type: {eq: \"project\"}}}\n  ) {\n    edges {\n      node {\n        id\n        frontmatter {\n          languages\n          priority\n          dependencies\n          slug\n          link\n          description\n          title\n          thumb {\n            childImageSharp {\n              gatsbyImageData(placeholder: BLURRED)\n            }\n          }\n          date(formatString: \"MMMM YYYY\")\n        }\n      }\n    }\n  }\n  banner_photo: file(sourceInstanceName: {eq: \"photography\"}, name: {eq: \"alpha_quebec\"}) {\n    childImageSharp {\n      gatsbyImageData(placeholder: BLURRED)\n    }\n  }\n  photo: file(sourceInstanceName: {eq: \"photography\"}, name: {eq: \"2023_delta_slim\"}) {\n    childImageSharp {\n      gatsbyImageData(placeholder: BLURRED)\n    }\n  }\n}\n`;\n\nexport const Head = () => (\n    <SEO />\n);\n","export type Language = {\n    id: string;\n    name: string;\n    icon: string;\n    icon_mono: string;\n};\n\nexport const languages = new Map<string, Language>([\n    [\"python\", {\n        id: \"python\",\n        name: \"Python\",\n        icon: \"/icons/python.svg\",\n        icon_mono: \"/icons/python.svg\"\n    }],\n    [\"cpp\", {\n        id: \"cpp\",\n        name: \"C++\",\n        icon: \"/icons/c-plusplus.svg\",\n        icon_mono: \"/icons/c-plusplus_mono.svg\"\n    }],\n    [\"typescript\", {\n        id: \"typescript\",\n        name: \"TypeScript\",\n        icon: \"/icons/typescript-icon.svg\",\n        icon_mono: \"/icons/typescript-icon_mono.svg\"\n    }],\n    [\"java\", {\n        id: \"java\",\n        name: \"Java\",\n        icon: \"/icons/java.svg\",\n        icon_mono: \"/icons/java.svg\"\n    }],\n    [\"rust\", {\n        id: \"rust\",\n        name: \"Rust\",\n        icon: \"/icons/rust.svg\",\n        icon_mono: \"/icons/rust.svg\"\n    }],\n    [\"c\", {\n        id: \"c\",\n        name: \"C\",\n        icon: \"/icons/c.svg\",\n        icon_mono: \"/icons/c.svg\"\n    }],\n    [\"dart\", {\n        id: \"dart\",\n        name: \"Dart\",\n        icon: \"/icons/dart.svg\",\n        icon_mono: \"/icons/dart.svg\"\n    }],\n    [\"go\", {\n        id: \"go\",\n        name: \"Go\",\n        icon: \"/icons/go.svg\",\n        icon_mono: \"/icons/go.svg\"\n    }],\n]);\n","import React from \"react\";\n\nimport * as styles from \"src/styles/hover_icon.module.scss\";\nimport get_mask from \"src/utils/svg_mask\";\n\ninterface HoverIconProps {\n    icon: string;\n    alt?: string;\n    icon_mono?: string;\n    className?: string;\n    // used to add hover effect to out-of-scope elements\n    icon_class?: string;\n    icon_mono_class?: string;\n}\nconst HoverIcon = (props: HoverIconProps) => {\n    const icon = props.icon;\n    const alt = props.alt ? props.alt : \"icon\";\n    const icon_mono = props.icon_mono ? props.icon_mono : icon;\n    return (\n        <div className={`${styles.icon_wrapper} ${props.className}`}>\n            <img\n                className={`${styles.icon} ${props.icon_class}`}\n                src={icon}\n                alt={alt}\n            />\n            <div\n                className={`${styles.icon_mono} ${props.icon_mono_class}`}\n                style={get_mask(icon_mono)}\n            ></div>\n        </div>\n    );\n};\nexport default HoverIcon;\n","import { getImage, GatsbyImage, IGatsbyImageData, ImageDataLike } from \"gatsby-plugin-image\";\nimport React from \"react\";\n\nimport * as styles from \"src/styles/project_list.module.scss\";\nimport { Language, languages } from \"src/utils/languages\";\nimport HoverIcon from \"./hover_icon\";\n\nexport type Project = {\n    id: number;\n    date: string;\n    languages: Language[];\n    priority: number;\n    dependencies: string[];\n    description: string;\n    slug: string;\n    link: string;\n    title: string;\n    thumb: IGatsbyImageData;\n}\n\nexport function gql_to_project(project: any): Project {\n    return {\n        id: project.node.id,\n        date: project.node.frontmatter?.date,\n        languages: project.node.frontmatter?.languages.map((language: string) => languages.get(language)),\n        priority: parseInt(project.node.frontmatter?.priority),\n        dependencies: project.node.frontmatter?.dependencies,\n        description: project.node.frontmatter?.description,\n        slug: project.node.frontmatter?.slug,\n        link: project.node.frontmatter?.link,\n        title: project.node.frontmatter?.title,\n        thumb: getImage(project.node.frontmatter?.thumb as ImageDataLike)!,\n    };\n}\n\ninterface ProjectListProps {\n    projects: Project[];\n    count: number;\n    className?: string;\n}\nconst ProjectList = (props: ProjectListProps) => {\n    const count = props.count;\n    const full_width = `${100 / count}%`;\n    const half_width = `${100 / Math.ceil(count / 2)}%`;\n    const quarter_width = `${100 / Math.ceil(count / 4)}%`;\n    let width_properties = {\n        \"--full-width\": full_width,\n        \"--half-width\": half_width,\n        \"--quarter-width\": quarter_width,\n    } as React.CSSProperties;\n    return (\n        <div className={`${styles.projects} ${props.className}`}>\n            {props.projects.map(project =>\n                <a href={project.link} target=\"_blank\" key={project.id} className={styles.project} style={width_properties}>\n                    <div className={styles.content}>\n                        <GatsbyImage className={styles.image} image={project.thumb} alt=\"thumbnail\" />\n                        <div className={styles.text}>\n                            <div className={styles.title}>\n                                <h2 className={styles.heading}>{project.title}</h2>\n                                {project.languages.map(language =>\n                                    <HoverIcon\n                                        className={styles.language_icon}\n                                        key={`${project.id}${language.id}`}\n                                        icon={language.icon}\n                                        icon_mono={language.icon_mono}\n                                        alt={language.id}\n                                        icon_class={styles.icon}\n                                        icon_mono_class={styles.icon_mono}\n                                    />\n                                )}\n                            </div>\n                            <hr />\n                            <div className={styles.description}>\n                                <p>{project.description}</p>\n                                {/* <p>{project.priority}</p> */}\n                            </div>\n                        </div>\n                    </div>\n                </a>\n            )\n            }\n        </div >);\n};\nexport default ProjectList;\n","// extracted by mini-css-extract-plugin\nexport var content = \"project_list-module--content--5f844\";\nexport var description = \"project_list-module--description--3851a\";\nexport var heading = \"project_list-module--heading--5ad99\";\nexport var icon = \"project_list-module--icon--69fe8\";\nexport var icon_mono = \"project_list-module--icon_mono--7fdf0\";\nexport var image = \"project_list-module--image--b05ea\";\nexport var image_wrapper = \"project_list-module--image_wrapper--74566\";\nexport var language_icon = \"project_list-module--language_icon--5e033\";\nexport var project = \"project_list-module--project--b34f6\";\nexport var projects = \"project_list-module--projects--af962\";\nexport var text = \"project_list-module--text--25836\";\nexport var title = \"project_list-module--title--5f73d\";","// extracted by mini-css-extract-plugin\nexport var body = \"tile_list-module--body--f1f53\";\nexport var date = \"tile_list-module--date--a07c1\";\nexport var heading = \"tile_list-module--heading--500db\";\nexport var image = \"tile_list-module--image--41f35\";\nexport var link = \"tile_list-module--link--7d30d\";\nexport var tile = \"tile_list-module--tile--ecd3c\";","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { getImage, GatsbyImage, IGatsbyImageData, ImageDataLike } from \"gatsby-plugin-image\";\n\nimport * as styles from \"src/styles/tile_list.module.scss\";\n\nexport type Tile = {\n    id: number;\n    date: string;\n    description: string;\n    link: string;\n    title: string;\n    thumb: IGatsbyImageData;\n    is_internal: boolean;\n}\n\nexport function gql_article_to_tile(article: any): Tile {\n    return {\n        id: article.node.id,\n        date: article.node.frontmatter?.date,\n        description: article.node.frontmatter?.description,\n        link: `/articles/${article.node.frontmatter?.slug}`,\n        title: article.node.frontmatter?.title,\n        thumb: getImage(article.node.frontmatter?.thumb as ImageDataLike)!,\n        is_internal: true,\n    };\n}\n\nexport function gql_talk_to_tile(talk: any): Tile {\n    return {\n        id: talk.node.id,\n        date: talk.node.frontmatter?.date,\n        description: talk.node.frontmatter?.description,\n        link: talk.node.frontmatter?.link,\n        title: talk.node.frontmatter?.title,\n        thumb: getImage(talk.node.frontmatter?.thumb as ImageDataLike)!,\n        is_internal: false,\n    };\n}\n\ninterface TileListProps {\n    tiles: Tile[];\n    className?: string;\n}\nconst TileList = (props: TileListProps) => {\n    return (\n        <div className={props.className}>\n            {props.tiles.map(tile => {\n                const tile_content = <div className={styles.tile}>\n                    <div className={styles.image}>\n                        <GatsbyImage image={tile.thumb} alt=\"thumbnail\" />\n                    </div>\n                    <div className={styles.body}>\n                        <div>\n                            <h2 className={styles.heading}>{tile.title}</h2>\n                            <hr />\n                            <div>\n                                {tile.description.split(\"\\n\").map((paragraph, idx) =>\n                                    <p key={idx}>{paragraph}</p>\n                                )}\n                            </div>\n                        </div>\n\n                        <p className={styles.date}>{tile.date}</p>\n                    </div>\n                </div>\n                return tile.is_internal\n                    ? <Link to={tile.link} key={tile.id} className={styles.link}>{tile_content}</Link>\n                    : <a target=\"_blank\" href={tile.link} key={tile.id} className={styles.link}>{tile_content}</a>;\n            }\n            )}\n        </div>\n    );\n};\nexport default TileList;\n\n"],"names":["photo","photo_wrapper","photos","slim_photo","block","link","main_block","spacer","max_priority_highlight","max_priority_list_default","max_priority_language_default","max_priority_list_all","max_priority_language_all","language","props","React","className","heading","_ref","data","projects","edges","map","gql_to_project","filter","project","priority","articles","gql_article_to_tile","slice","Layout","banner_image","banner_photo","banner_image_style","banner_content","Link","to","styles","HoverIcon","icon","icon_mono","alt","SubHeading","TileList","tiles","util_styles","ProjectList","count","GatsbyImage","photography_styles","image","getImage","Head","SEO","languages","Map","id","name","icon_class","src","icon_mono_class","style","get_mask","_project$node$frontma","_project$node$frontma2","_project$node$frontma3","_project$node$frontma4","_project$node$frontma5","_project$node$frontma6","_project$node$frontma7","_project$node$frontma8","_project$node$frontma9","node","date","frontmatter","get","parseInt","dependencies","description","slug","title","thumb","width_properties","Math","ceil","href","target","key","article","_article$node$frontma","_article$node$frontma2","_article$node$frontma3","_article$node$frontma4","_article$node$frontma5","is_internal","gql_talk_to_tile","talk","_talk$node$frontmatte","_talk$node$frontmatte2","_talk$node$frontmatte3","_talk$node$frontmatte4","_talk$node$frontmatte5","tile","tile_content","split","paragraph","idx"],"sourceRoot":""}