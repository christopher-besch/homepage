{"version":3,"file":"component---src-pages-photography-2025-tsx-3fa54d3c3ea22cf9b576.js","mappings":"gNACO,IAAIA,EAAQ,mCACRC,EAAgB,2CAChBC,EAAS,oCACTC,EAAa,uC,0ICyCxB,UApCwBC,IAAgD,IAA/C,KAAEC,GAAwCD,EAC3DE,EAAS,IAAIC,IACbC,EAAgB,IAAID,IACxB,IAAK,IAAIE,KAAQJ,EAAKK,QAAQC,MAAO,KAAAC,EAAAC,EACjC,IAAIC,GAAQC,EAAAA,EAAAA,GAASN,GACrBH,EAAOU,IAAIP,EAAKQ,KAAMH,GAEtBN,EAAcQ,IAAIP,EAAKQ,KAA0B,QAAtBL,EAAEE,EAAMR,OAAOY,eAAO,IAAAN,GAAO,QAAPC,EAApBD,EAAsBO,GAAG,UAAE,IAAAN,OAAP,EAApBA,EAA6BO,OAAOC,WAAW,KAAM,KAAKC,MAAM,KAAKH,IAAI,GAC1G,CAEA,OACII,EAAAA,cAACC,EAAAA,EAAM,CAACC,QAAQ,OAAOC,mBAAmB,GACtCH,EAAAA,cAAA,OAAKI,UAAWC,EAAAA,IACZL,EAAAA,cAAA,KAAGM,KAAMrB,EAAcsB,IAAI,cAAeC,OAAO,SAASJ,UAAWC,EAAAA,IACjEL,EAAAA,cAACS,EAAAA,EAAW,CAACL,UAAWC,EAAAA,GAA0Bd,MAAOR,EAAOwB,IAAI,cAAgBG,IAAI,MAE5FV,EAAAA,cAAA,KAAGM,KAAMrB,EAAcsB,IAAI,cAAeC,OAAO,SAASJ,UAAWC,EAAAA,IACjEL,EAAAA,cAACS,EAAAA,EAAW,CAACL,UAAWC,EAAAA,GAA0Bd,MAAOR,EAAOwB,IAAI,cAAgBG,IAAI,MAE5FV,EAAAA,cAAA,KAAGM,KAAMrB,EAAcsB,IAAI,gBAAiBC,OAAO,SAASJ,UAAWC,EAAAA,IACnEL,EAAAA,cAACS,EAAAA,EAAW,CAACL,UAAWC,EAAAA,GAA0Bd,MAAOR,EAAOwB,IAAI,gBAAkBG,IAAI,MAE9FV,EAAAA,cAAA,KAAGM,KAAMrB,EAAcsB,IAAI,cAAeC,OAAO,SAASJ,UAAWC,EAAAA,IACjEL,EAAAA,cAACS,EAAAA,EAAW,CAACL,UAAWC,EAAAA,GAA0Bd,MAAOR,EAAOwB,IAAI,cAAgBG,IAAI,MAE5FV,EAAAA,cAAA,KAAGM,KAAMrB,EAAcsB,IAAI,aAAcC,OAAO,SAASJ,UAAWC,EAAAA,IAChEL,EAAAA,cAACS,EAAAA,EAAW,CAACL,UAAWC,EAAAA,GAA0Bd,MAAOR,EAAOwB,IAAI,aAAeG,IAAI,MAE3FV,EAAAA,cAAA,KAAGM,KAAMrB,EAAcsB,IAAI,gBAAiBC,OAAO,SAASJ,UAAWC,EAAAA,IACnEL,EAAAA,cAACS,EAAAA,EAAW,CAACL,UAAWC,EAAAA,GAA0Bd,MAAOR,EAAOwB,IAAI,gBAAkBG,IAAI,OAGlGV,EAAAA,cAACW,EAAAA,GAAI,CAACP,UAAY,GAAEQ,EAAAA,MAAqBA,EAAAA,KAAoBC,GAAG,gBAAe,eACzE,EAKX,MAaMC,EAAOA,IAChBd,EAAAA,cAACe,EAAAA,EAAG,CAACb,QAAQ,oB,gIC5DV,IAAIc,EAAQ,6BACRC,EAAO,4BACPC,EAAa,kCACbC,EAAS,6B","sources":["webpack://homepage/./src/styles/photography.module.scss","webpack://homepage/./src/pages/photography/2025.tsx","webpack://homepage/./src/styles/utils.module.scss"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var photo = \"photography-module--photo--faba5\";\nexport var photo_wrapper = \"photography-module--photo_wrapper--4d7ef\";\nexport var photos = \"photography-module--photos--ab385\";\nexport var slim_photo = \"photography-module--slim_photo--1b603\";","import React from \"react\";\nimport { graphql, Link, PageProps } from \"gatsby\";\nimport { getImage, GatsbyImage, IGatsbyImageData, ImageDataLike } from \"gatsby-plugin-image\";\nimport Layout from \"src/components/layout\";\nimport SEO from \"src/components/seo\";\n\nimport * as util_styles from \"src/styles/utils.module.scss\";\nimport * as photography_styles from \"src/styles/photography.module.scss\";\n\nconst Photography2025 = ({ data }: PageProps<Queries.ToVanishQuery>) => {\n    let images = new Map<string, IGatsbyImageData>();\n    let image_sources = new Map<string, string>();\n    for (let node of data.allFile.nodes) {\n        let image = getImage(node as ImageDataLike)!;\n        images.set(node.name, image);\n        // This is super ugly but I can't be bothered doing this properly before getting away from Gatsby.\n        image_sources.set(node.name, image.images.sources?.at(0)?.srcSet.replaceAll(\"\\n\", \" \").split(\" \").at(-2)!);\n    }\n\n    return (\n        <Layout heading=\"2025\" keep_heading_line={true}>\n            <div className={photography_styles.photos} >\n                <a href={image_sources.get(\"2025_alpha\")} target=\"_blank\" className={photography_styles.photo_wrapper}>\n                    <GatsbyImage className={photography_styles.photo} image={images.get(\"2025_alpha\")!} alt=\"\" />\n                </a>\n                <a href={image_sources.get(\"2025_bravo\")} target=\"_blank\" className={photography_styles.photo_wrapper}>\n                    <GatsbyImage className={photography_styles.photo} image={images.get(\"2025_bravo\")!} alt=\"\" />\n                </a>\n                <a href={image_sources.get(\"2025_charlie\")} target=\"_blank\" className={photography_styles.photo_wrapper}>\n                    <GatsbyImage className={photography_styles.photo} image={images.get(\"2025_charlie\")!} alt=\"\" />\n                </a>\n                <a href={image_sources.get(\"2025_delta\")} target=\"_blank\" className={photography_styles.photo_wrapper}>\n                    <GatsbyImage className={photography_styles.photo} image={images.get(\"2025_delta\")!} alt=\"\" />\n                </a>\n                <a href={image_sources.get(\"2025_echo\")} target=\"_blank\" className={photography_styles.photo_wrapper}>\n                    <GatsbyImage className={photography_styles.photo} image={images.get(\"2025_echo\")!} alt=\"\" />\n                </a>\n                <a href={image_sources.get(\"2025_foxtrot\")} target=\"_blank\" className={photography_styles.photo_wrapper}>\n                    <GatsbyImage className={photography_styles.photo} image={images.get(\"2025_foxtrot\")!} alt=\"\" />\n                </a>\n            </div>\n            <Link className={`${util_styles.block} ${util_styles.link}`} to=\"/photography\">More Photos</Link>\n        </Layout >\n    );\n};\nexport default Photography2025;\n\nexport const query = graphql`\nquery ToVanish {\n  allFile(filter: {sourceInstanceName: {eq: \"photography\"}}) {\n    nodes {\n      childImageSharp {\n        gatsbyImageData(placeholder: BLURRED)\n      }\n      name\n    }\n  }\n}\n`;\n\nexport const Head = () => (\n    <SEO heading=\"Photography 2025\" />\n);\n","// extracted by mini-css-extract-plugin\nexport var block = \"utils-module--block--dae27\";\nexport var link = \"utils-module--link--f5973\";\nexport var main_block = \"utils-module--main_block--4b45a\";\nexport var spacer = \"utils-module--spacer--54e98\";"],"names":["photo","photo_wrapper","photos","slim_photo","_ref","data","images","Map","image_sources","node","allFile","nodes","_image$images$sources","_image$images$sources2","image","getImage","set","name","sources","at","srcSet","replaceAll","split","React","Layout","heading","keep_heading_line","className","photography_styles","href","get","target","GatsbyImage","alt","Link","util_styles","to","Head","SEO","block","link","main_block","spacer"],"sourceRoot":""}