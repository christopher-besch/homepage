{"version":3,"file":"component---src-pages-projects-tsx-8b36f3d6c787e50eb79d.js","mappings":"uOAyBA,WAAeA,EAAAA,EAAAA,IAZEC,IAAqC,IAApC,KAAEC,EAAI,OAAEC,GAAuBF,EAC7C,MAAMG,EAAsC,MAAvBD,EAAOC,aAAuBC,SAASF,EAAOC,cAA0BE,EAAAA,GAEvFC,EADeL,EAAKM,OAAOC,MAAMC,IAAIC,EAAAA,GACbC,QAAOC,GAAWA,EAAQC,UAAYV,IAEpE,OACIW,EAAAA,cAACC,EAAAA,EAAM,CAACC,QAASb,GAAgBc,EAAAA,GAAwB,eAAiB,YACtEH,EAAAA,cAACI,EAAAA,EAAW,CAACZ,SAAUA,EAAUa,MAAO,IACvChB,EAAec,EAAAA,GAAwBH,EAAAA,cAACM,EAAAA,GAAI,CAACC,UAAY,GAAEC,EAAAA,MAAqBA,EAAAA,KAAoBC,GAAK,0BAAyBN,EAAAA,MAAyB,iBAAkBO,EACxK,IAKX,MA8BMC,EAAOA,IAChBX,EAAAA,cAACY,EAAAA,EAAG,CAACV,QAAQ,Y","sources":["webpack://homepage/./src/pages/projects.tsx"],"sourcesContent":["import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\n\nimport Layout from \"src/components/layout\";\nimport SEO from \"src/components/seo\";\nimport ProjectList, { gql_to_project } from \"src/components/project_list\";\nimport * as util_styles from \"src/styles/utils.module.scss\";\nimport { max_priority_list_default, max_priority_list_all } from \"src/utils/consts\";\nimport { with_location, PropsWithLocation } from \"src/utils/with_location\";\n\ninterface ProjectsProps extends PropsWithLocation {\n    data: Queries.ProjectsQuery;\n}\nconst Projects = ({ data, search }: ProjectsProps) => {\n    const max_priority = search.max_priority != null ? parseInt(search.max_priority as string) : max_priority_list_default;\n    const all_projects = data.allMdx.edges.map(gql_to_project);\n    const projects = all_projects.filter(project => project.priority <= max_priority);\n\n    return (\n        <Layout heading={max_priority >= max_priority_list_all ? \"All Projects\" : \"Projects\"}>\n            <ProjectList projects={projects} count={3} />\n            {max_priority < max_priority_list_all ? <Link className={`${util_styles.block} ${util_styles.link}`} to={`/projects?max_priority=${max_priority_list_all}`}>Show All</Link> : undefined}\n        </Layout >\n    );\n};\nexport default with_location(Projects);\n\nexport const query = graphql`\nquery Projects {\n  allMdx(\n    sort: {frontmatter: {priority: ASC}}\n    filter: {frontmatter: {type: {eq: \"project\"}}}\n  ) {\n    edges {\n      node {\n        id\n        frontmatter {\n          languages\n          priority\n          dependencies\n          slug\n          link\n          description\n          title\n          thumb {\n            childImageSharp {\n              gatsbyImageData(placeholder: BLURRED)\n            }\n          }\n          date(formatString: \"MMMM YYYY\")\n        }\n      }\n    }\n  }\n}\n`;\n\nexport const Head = () => (\n    <SEO heading=\"Projects\" />\n);\n"],"names":["with_location","_ref","data","search","max_priority","parseInt","max_priority_list_default","projects","allMdx","edges","map","gql_to_project","filter","project","priority","React","Layout","heading","max_priority_list_all","ProjectList","count","Link","className","util_styles","to","undefined","Head","SEO"],"sourceRoot":""}